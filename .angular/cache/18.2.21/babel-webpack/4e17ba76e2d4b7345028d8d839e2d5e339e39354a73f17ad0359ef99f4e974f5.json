{"ast":null,"code":"// src/eventbus/index.ts\nfunction EventBus() {\n  const allHandlers = /* @__PURE__ */new Map();\n  return {\n    on(type, handler) {\n      let handlers = allHandlers.get(type);\n      if (!handlers) handlers = [handler];else handlers.push(handler);\n      allHandlers.set(type, handlers);\n      return this;\n    },\n    off(type, handler) {\n      let handlers = allHandlers.get(type);\n      if (handlers) {\n        handlers.splice(handlers.indexOf(handler) >>> 0, 1);\n      }\n      return this;\n    },\n    emit(type, evt) {\n      let handlers = allHandlers.get(type);\n      if (handlers) {\n        handlers.slice().map(handler => {\n          handler(evt);\n        });\n      }\n    },\n    clear() {\n      allHandlers.clear();\n    }\n  };\n}\nexport { EventBus };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}