{"ast":null,"code":"import _asyncToGenerator from \"/workspaces/visualizador-datos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as signalR from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class RealtimeAlertsService {\n  hub;\n  _sum$ = new BehaviorSubject(0);\n  sum$ = this._sum$.asObservable();\n  connect() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.hub?.state === signalR.HubConnectionState.Connected) return;\n      _this.hub = new signalR.HubConnectionBuilder().withUrl('/hubs/alerts') // proxificado a la API\n      .withAutomaticReconnect().build();\n      _this.hub.on('sumUpdated', total => {\n        _this._sum$.next(total);\n        console.log('[SignalR] sumUpdated:', total);\n      });\n      yield _this.hub.start();\n      console.log('[SignalR] connected');\n    })();\n  }\n  static ɵfac = function RealtimeAlertsService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || RealtimeAlertsService)();\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RealtimeAlertsService,\n    factory: RealtimeAlertsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}