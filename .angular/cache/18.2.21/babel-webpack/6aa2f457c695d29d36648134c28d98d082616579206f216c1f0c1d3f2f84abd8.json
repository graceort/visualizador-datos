{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, inject, numberAttribute, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleLeftIcon, AngleRightIcon } from 'primeng/icons';\nimport { InputNumber } from 'primeng/inputnumber';\nimport { Ripple } from 'primeng/ripple';\nimport { Select } from 'primeng/select';\nimport { BaseStyle } from 'primeng/base';\nconst theme = ({\n  dt\n}) => `\n.p-paginator {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    background: ${dt('paginator.background')};\n    color: ${dt('paginator.color')};\n    padding: ${dt('paginator.padding')};\n    border-radius: ${dt('paginator.border.radius')};\n    gap: ${dt('paginator.gap')};\n}\n\n.p-paginator-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: ${dt('paginator.gap')};\n}\n\n.p-paginator-content-start {\n    margin-inline-end: auto;\n}\n\n.p-paginator-content-end {\n    margin-inline-start: auto;\n}\n\n.p-paginator-page,\n.p-paginator-next,\n.p-paginator-last,\n.p-paginator-first,\n.p-paginator-prev {\n    cursor: pointer;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    line-height: 1;\n    user-select: none;\n    overflow: hidden;\n    position: relative;\n    background: ${dt('paginator.nav.button.background')};\n    border: 0 none;\n    color: ${dt('paginator.nav.button.color')};\n    min-width: ${dt('paginator.nav.button.width')};\n    height: ${dt('paginator.nav.button.height')};\n    transition: background ${dt('paginator.transition.duration')}, color ${dt('paginator.transition.duration')}, outline-color ${dt('paginator.transition.duration')}, box-shadow ${dt('paginator.transition.duration')};\n    border-radius: ${dt('paginator.nav.button.border.radius')};\n    padding: 0;\n    margin: 0;\n}\n\n.p-paginator-page:focus-visible,\n.p-paginator-next:focus-visible,\n.p-paginator-last:focus-visible,\n.p-paginator-first:focus-visible,\n.p-paginator-prev:focus-visible {\n    box-shadow: ${dt('paginator.nav.button.focus.ring.shadow')};\n    outline: ${dt('paginator.nav.button.focus.ring.width')} ${dt('paginator.nav.button.focus.ring.style')} ${dt('paginator.nav.button.focus.ring.color')};\n    outline-offset: ${dt('paginator.nav.button.focus.ring.offset')};\n}\n\n.p-paginator-page:not(.p-disabled):not(.p-paginator-page-selected):hover,\n.p-paginator-first:not(.p-disabled):hover,\n.p-paginator-prev:not(.p-disabled):hover,\n.p-paginator-next:not(.p-disabled):hover,\n.p-paginator-last:not(.p-disabled):hover {\n    background: ${dt('paginator.nav.button.hover.background')};\n    color: ${dt('paginator.nav.button.hover.color')};\n}\n\n.p-paginator-first:dir(rtl),\n.p-paginator-prev:dir(rtl),\n.p-paginator-next:dir(rtl),\n.p-paginator-last:dir(rtl) {\n    transform: rotate(180deg);\n}\n\n.p-paginator-page.p-paginator-page-selected {\n    background: ${dt('paginator.nav.button.selected.background')};\n    color: ${dt('paginator.nav.button.selected.color')};\n}\n\n.p-paginator-current {\n    color: ${dt('paginator.current.page.report.color')};\n}\n\n.p-paginator-pages {\n    display: flex;\n    align-items: center;\n    gap: ${dt('paginator.gap')};\n}\n\n.p-paginator-jtp-input .p-inputtext {\n    max-width: ${dt('paginator.jump.to.page.input.max.width')};\n}\n`;\nconst classes = {\n  paginator: ({\n    instance,\n    key\n  }) => ['p-paginator p-component', {\n    'p-paginator-default': !instance.hasBreakpoints(),\n    [`p-paginator-${key}`]: instance.hasBreakpoints()\n  }],\n  content: 'p-paginator-content',\n  contentStart: 'p-paginator-content-start',\n  contentEnd: 'p-paginator-content-end',\n  first: ({\n    instance\n  }) => ['p-paginator-first', {\n    'p-disabled': instance.$attrs.disabled\n  }],\n  firstIcon: 'p-paginator-first-icon',\n  prev: ({\n    instance\n  }) => ['p-paginator-prev', {\n    'p-disabled': instance.$attrs.disabled\n  }],\n  prevIcon: 'p-paginator-prev-icon',\n  next: ({\n    instance\n  }) => ['p-paginator-next', {\n    'p-disabled': instance.$attrs.disabled\n  }],\n  nextIcon: 'p-paginator-next-icon',\n  last: ({\n    instance\n  }) => ['p-paginator-last', {\n    'p-disabled': instance.$attrs.disabled\n  }],\n  lastIcon: 'p-paginator-last-icon',\n  pages: 'p-paginator-pages',\n  page: ({\n    props,\n    pageLink\n  }) => ['p-paginator-page', {\n    'p-paginator-page-selected': pageLink - 1 === props.page\n  }],\n  current: 'p-paginator-current',\n  pcRowPerPageDropdown: 'p-paginator-rpp-dropdown',\n  pcJumpToPageDropdown: 'p-paginator-jtp-dropdown',\n  pcJumpToPageInput: 'p-paginator-jtp-input'\n};\nclass PaginatorStyle extends BaseStyle {\n  name = 'paginator';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /*@__PURE__*/(() => {\n    let ɵPaginatorStyle_BaseFactory;\n    return function PaginatorStyle_Factory(__ngFactoryType__) {\n      return (ɵPaginatorStyle_BaseFactory || (ɵPaginatorStyle_BaseFactory = i0.ɵɵgetInheritedFactory(PaginatorStyle)))(__ngFactoryType__ || PaginatorStyle);\n    };\n  })();\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaginatorStyle,\n    factory: PaginatorStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginatorStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Paginator is a generic component to display content in paged format.\n *\n * [Live Demo](https://www.primeng.org/paginator)\n *\n * @module paginatorstyle\n *\n */\nvar PaginatorClasses;\n(function (PaginatorClasses) {\n  /**\n   * Class name of the paginator element\n   */\n  PaginatorClasses[\"paginator\"] = \"p-paginator\";\n  /**\n   * Class name of the content start element\n   */\n  PaginatorClasses[\"contentStart\"] = \"p-paginator-content-start\";\n  /**\n   * Class name of the content end element\n   */\n  PaginatorClasses[\"contentEnd\"] = \"p-paginator-content-end\";\n  /**\n   * Class name of the first element\n   */\n  PaginatorClasses[\"first\"] = \"p-paginator-first\";\n  /**\n   * Class name of the first icon element\n   */\n  PaginatorClasses[\"firstIcon\"] = \"p-paginator-first-icon\";\n  /**\n   * Class name of the prev element\n   */\n  PaginatorClasses[\"prev\"] = \"p-paginator-prev\";\n  /**\n   * Class name of the prev icon element\n   */\n  PaginatorClasses[\"prevIcon\"] = \"p-paginator-prev-icon\";\n  /**\n   * Class name of the next element\n   */\n  PaginatorClasses[\"next\"] = \"p-paginator-next\";\n  /**\n   * Class name of the next icon element\n   */\n  PaginatorClasses[\"nextIcon\"] = \"p-paginator-next-icon\";\n  /**\n   * Class name of the last element\n   */\n  PaginatorClasses[\"last\"] = \"p-paginator-last\";\n  /**\n   * Class name of the last icon element\n   */\n  PaginatorClasses[\"lastIcon\"] = \"p-paginator-last-icon\";\n  /**\n   * Class name of the pages element\n   */\n  PaginatorClasses[\"pages\"] = \"p-paginator-pages\";\n  /**\n   * Class name of the page element\n   */\n  PaginatorClasses[\"page\"] = \"p-paginator-page\";\n  /**\n   * Class name of the current element\n   */\n  PaginatorClasses[\"current\"] = \"p-paginator-current\";\n  /**\n   * Class name of the row per page dropdown element\n   */\n  PaginatorClasses[\"pcRowPerPageDropdown\"] = \"p-paginator-rpp-dropdown\";\n  /**\n   * Class name of the jump to page dropdown element\n   */\n  PaginatorClasses[\"pcJumpToPageDropdown\"] = \"p-paginator-jtp-dropdown\";\n  /**\n   * Class name of the jump to page input element\n   */\n  PaginatorClasses[\"pcJumpToPageInput\"] = \"p-paginator-jtp-input\";\n})(PaginatorClasses || (PaginatorClasses = {}));\nconst _c0 = [\"dropdownicon\"];\nconst _c1 = [\"firstpagelinkicon\"];\nconst _c2 = [\"previouspagelinkicon\"];\nconst _c3 = [\"lastpagelinkicon\"];\nconst _c4 = [\"nextpagelinkicon\"];\nconst _c5 = a0 => ({\n  \"p-disabled\": a0\n});\nconst _c6 = a0 => ({\n  $implicit: a0\n});\nconst _c7 = a0 => ({\n  \"p-paginator-page-selected\": a0\n});\nfunction Paginator_div_0_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Paginator_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, Paginator_div_0_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"start\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.templateLeft)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c6, ctx_r1.paginatorState));\n  }\n}\nfunction Paginator_div_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.currentPageReport);\n  }\n}\nfunction Paginator_div_0_button_3_AngleDoubleLeftIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDoubleLeftIcon\", 21);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-paginator-first-icon\");\n  }\n}\nfunction Paginator_div_0_button_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_button_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_button_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_button_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtemplate(1, Paginator_div_0_button_3_span_2_1_Template, 1, 0, null, 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.firstPageLinkIconTemplate || ctx_r1._firstPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_button_3_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.changePageToFirst($event));\n    });\n    i0.ɵɵtemplate(1, Paginator_div_0_button_3_AngleDoubleLeftIcon_1_Template, 1, 1, \"AngleDoubleLeftIcon\", 6)(2, Paginator_div_0_button_3_span_2_Template, 2, 1, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isFirstPage() || ctx_r1.empty())(\"ngClass\", i0.ɵɵpureFunction1(5, _c5, ctx_r1.isFirstPage() || ctx_r1.empty()));\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.getAriaLabel(\"firstPageLabel\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.firstPageLinkIconTemplate && !ctx_r1._firstPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.firstPageLinkIconTemplate || ctx_r1._firstPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_AngleLeftIcon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleLeftIcon\", 21);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-paginator-prev-icon\");\n  }\n}\nfunction Paginator_div_0_span_6_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_span_6_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_span_6_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtemplate(1, Paginator_div_0_span_6_1_Template, 1, 0, null, 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.previousPageLinkIconTemplate || ctx_r1._previousPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_span_7_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_span_7_button_1_Template_button_click_0_listener($event) {\n      const pageLink_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onPageLinkClick($event, pageLink_r5 - 1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageLink_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c7, pageLink_r5 - 1 == ctx_r1.getPage()));\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.getPageAriaLabel(pageLink_r5))(\"aria-current\", pageLink_r5 - 1 == ctx_r1.getPage() ? \"page\" : undefined);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getLocalization(pageLink_r5), \" \");\n  }\n}\nfunction Paginator_div_0_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, Paginator_div_0_span_7_button_1_Template, 2, 6, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.pageLinks);\n  }\n}\nfunction Paginator_div_0_p_select_8_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵtextInterpolate(ctx_r1.currentPageReport);\n  }\n}\nfunction Paginator_div_0_p_select_8_ng_container_2_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_select_8_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_p_select_8_ng_container_2_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 17);\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.jumpToPageItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c6, item_r7));\n  }\n}\nfunction Paginator_div_0_p_select_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Paginator_div_0_p_select_8_ng_container_2_ng_template_1_Template, 1, 4, \"ng-template\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction Paginator_div_0_p_select_8_3_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_select_8_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_p_select_8_3_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 23);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.dropdownIconTemplate || ctx_r1._dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_p_select_8_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_p_select_8_3_ng_template_0_Template, 1, 1, \"ng-template\", 32);\n  }\n}\nfunction Paginator_div_0_p_select_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-select\", 28);\n    i0.ɵɵlistener(\"onChange\", function Paginator_div_0_p_select_8_Template_p_select_onChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onPageDropdownChange($event));\n    });\n    i0.ɵɵtemplate(1, Paginator_div_0_p_select_8_ng_template_1_Template, 1, 1, \"ng-template\", 29)(2, Paginator_div_0_p_select_8_ng_container_2_Template, 2, 0, \"ng-container\", 30)(3, Paginator_div_0_p_select_8_3_Template, 1, 0, null, 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"options\", ctx_r1.pageItems)(\"ngModel\", ctx_r1.getPage())(\"disabled\", ctx_r1.empty())(\"appendTo\", ctx_r1.dropdownAppendTo)(\"scrollHeight\", ctx_r1.dropdownScrollHeight);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.getAriaLabel(\"jumpToPageDropdownLabel\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.jumpToPageItemTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.dropdownIconTemplate || ctx_r1._dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_AngleRightIcon_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleRightIcon\", 21);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-paginator-next-icon\");\n  }\n}\nfunction Paginator_div_0_span_11_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_span_11_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_span_11_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtemplate(1, Paginator_div_0_span_11_1_Template, 1, 0, null, 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.nextPageLinkIconTemplate || ctx_r1._nextPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_button_12_AngleDoubleRightIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDoubleRightIcon\", 21);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-paginator-last-icon\");\n  }\n}\nfunction Paginator_div_0_button_12_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_button_12_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_button_12_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_button_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 36);\n    i0.ɵɵtemplate(1, Paginator_div_0_button_12_span_2_1_Template, 1, 0, null, 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.lastPageLinkIconTemplate || ctx_r1._lastPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_button_12_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.changePageToLast($event));\n    });\n    i0.ɵɵtemplate(1, Paginator_div_0_button_12_AngleDoubleRightIcon_1_Template, 1, 1, \"AngleDoubleRightIcon\", 6)(2, Paginator_div_0_button_12_span_2_Template, 2, 1, \"span\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isLastPage() || ctx_r1.empty())(\"ngClass\", i0.ɵɵpureFunction1(5, _c5, ctx_r1.isLastPage() || ctx_r1.empty()));\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.getAriaLabel(\"lastPageLabel\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.lastPageLinkIconTemplate && !ctx_r1._lastPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastPageLinkIconTemplate || ctx_r1._lastPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_p_inputnumber_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-inputnumber\", 37);\n    i0.ɵɵlistener(\"ngModelChange\", function Paginator_div_0_p_inputnumber_13_Template_p_inputnumber_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.changePage($event - 1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPage())(\"disabled\", ctx_r1.empty());\n  }\n}\nfunction Paginator_div_0_p_select_14_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_select_14_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_p_select_14_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 17);\n  }\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.dropdownItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c6, item_r11));\n  }\n}\nfunction Paginator_div_0_p_select_14_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Paginator_div_0_p_select_14_ng_container_1_ng_template_1_Template, 1, 4, \"ng-template\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction Paginator_div_0_p_select_14_2_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_select_14_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_p_select_14_2_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 23);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.dropdownIconTemplate || ctx_r1._dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_p_select_14_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Paginator_div_0_p_select_14_2_ng_template_0_Template, 1, 1, \"ng-template\", 32);\n  }\n}\nfunction Paginator_div_0_p_select_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-select\", 38);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function Paginator_div_0_p_select_14_Template_p_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.rows, $event) || (ctx_r1.rows = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"onChange\", function Paginator_div_0_p_select_14_Template_p_select_onChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onRppChange($event));\n    });\n    i0.ɵɵtemplate(1, Paginator_div_0_p_select_14_ng_container_1_Template, 2, 0, \"ng-container\", 30)(2, Paginator_div_0_p_select_14_2_Template, 1, 0, null, 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"options\", ctx_r1.rowsPerPageItems);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.rows);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.empty())(\"appendTo\", ctx_r1.dropdownAppendTo)(\"scrollHeight\", ctx_r1.dropdownScrollHeight)(\"ariaLabel\", ctx_r1.getAriaLabel(\"rowsPerPageLabel\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.dropdownItemTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.dropdownIconTemplate || ctx_r1._dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_div_15_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Paginator_div_0_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtemplate(1, Paginator_div_0_div_15_ng_container_1_Template, 1, 0, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"end\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.templateRight)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c6, ctx_r1.paginatorState));\n  }\n}\nfunction Paginator_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, Paginator_div_0_div_1_Template, 2, 5, \"div\", 2)(2, Paginator_div_0_span_2_Template, 2, 1, \"span\", 3)(3, Paginator_div_0_button_3_Template, 3, 7, \"button\", 4);\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_Template_button_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changePageToPrev($event));\n    });\n    i0.ɵɵtemplate(5, Paginator_div_0_AngleLeftIcon_5_Template, 1, 1, \"AngleLeftIcon\", 6)(6, Paginator_div_0_span_6_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, Paginator_div_0_span_7_Template, 2, 1, \"span\", 8)(8, Paginator_div_0_p_select_8_Template, 4, 8, \"p-select\", 9);\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function Paginator_div_0_Template_button_click_9_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.changePageToNext($event));\n    });\n    i0.ɵɵtemplate(10, Paginator_div_0_AngleRightIcon_10_Template, 1, 1, \"AngleRightIcon\", 6)(11, Paginator_div_0_span_11_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, Paginator_div_0_button_12_Template, 3, 7, \"button\", 12)(13, Paginator_div_0_p_inputnumber_13_Template, 1, 2, \"p-inputnumber\", 13)(14, Paginator_div_0_p_select_14_Template, 3, 8, \"p-select\", 14)(15, Paginator_div_0_div_15_Template, 2, 5, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.styleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.style)(\"ngClass\", \"p-paginator p-component\");\n    i0.ɵɵattribute(\"data-pc-section\", \"paginator\")(\"data-pc-section\", \"root\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.templateLeft);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showCurrentPageReport);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showFirstLastIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isFirstPage() || ctx_r1.empty())(\"ngClass\", i0.ɵɵpureFunction1(25, _c5, ctx_r1.isFirstPage() || ctx_r1.empty()));\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.getAriaLabel(\"prevPageLabel\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.previousPageLinkIconTemplate && !ctx_r1._previousPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.previousPageLinkIconTemplate || ctx_r1._previousPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showPageLinks);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showJumpToPageDropdown);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isLastPage() || ctx_r1.empty())(\"ngClass\", i0.ɵɵpureFunction1(27, _c5, ctx_r1.isLastPage() || ctx_r1.empty()));\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.getAriaLabel(\"nextPageLabel\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.nextPageLinkIconTemplate && !ctx_r1._nextPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.nextPageLinkIconTemplate || ctx_r1._nextPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showFirstLastIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showJumpToPageInput);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.rowsPerPageOptions);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.templateRight);\n  }\n}\n/**\n * Paginator is a generic component to display content in paged format.\n * @group Components\n */\nclass Paginator extends BaseComponent {\n  /**\n   * Number of page links to display.\n   * @group Props\n   */\n  pageLinkSize = 5;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Whether to show it even there is only one page.\n   * @group Props\n   */\n  alwaysShow = true;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  dropdownAppendTo;\n  /**\n   * Template instance to inject into the left side of the paginator.\n   * @param {PaginatorState} context - Paginator state.\n   * @group Props\n   */\n  templateLeft;\n  /**\n   * Template instance to inject into the right side of the paginator.\n   * @param {PaginatorState} context - Paginator state.\n   * @group Props\n   */\n  templateRight;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  appendTo;\n  /**\n   * Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   * @group Props\n   */\n  dropdownScrollHeight = '200px';\n  /**\n   * Template of the current page report element. Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   * @group Props\n   */\n  currentPageReportTemplate = '{currentPage} of {totalPages}';\n  /**\n   * Whether to display current page report.\n   * @group Props\n   */\n  showCurrentPageReport;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page.\n   * @group Props\n   */\n  showFirstLastIcon = true;\n  /**\n   * Number of total records.\n   * @group Props\n   */\n  totalRecords = 0;\n  /**\n   * Data count to display per page.\n   * @group Props\n   */\n  rows = 0;\n  /**\n   * Array of integer/object values to display inside rows per page dropdown. A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\n   * @group Props\n   */\n  rowsPerPageOptions;\n  /**\n   * Whether to display a dropdown to navigate to any page.\n   * @group Props\n   */\n  showJumpToPageDropdown;\n  /**\n   * Whether to display a input to navigate to any page.\n   * @group Props\n   */\n  showJumpToPageInput;\n  /**\n   * Template instance to inject into the jump to page dropdown item inside in the paginator.\n   * @param {Object} context - item instance.\n   * @group Props\n   */\n  jumpToPageItemTemplate;\n  /**\n   * Whether to show page links.\n   * @group Props\n   */\n  showPageLinks = true;\n  /**\n   * Locale to be used in formatting.\n   * @group Props\n   */\n  locale;\n  /**\n   * Template instance to inject into the rows per page dropdown item inside in the paginator.\n   * @param {Object} context - item instance.\n   * @group Props\n   */\n  dropdownItemTemplate;\n  /**\n   * Zero-relative number of the first row to be displayed.\n   * @group Props\n   */\n  get first() {\n    return this._first;\n  }\n  set first(val) {\n    this._first = val;\n  }\n  /**\n   * Callback to invoke when page changes, the event object contains information about the new state.\n   * @param {PaginatorState} event - Paginator state.\n   * @group Emits\n   */\n  onPageChange = new EventEmitter();\n  /**\n   * Template for the dropdown icon.\n   * @group Templates\n   */\n  dropdownIconTemplate;\n  /**\n   * Template for the first page link icon.\n   * @group Templates\n   */\n  firstPageLinkIconTemplate;\n  /**\n   * Template for the previous page link icon.\n   * @group Templates\n   */\n  previousPageLinkIconTemplate;\n  /**\n   * Template for the last page link icon.\n   * @group Templates\n   */\n  lastPageLinkIconTemplate;\n  /**\n   * Template for the next page link icon.\n   * @group Templates\n   */\n  nextPageLinkIconTemplate;\n  templates;\n  _dropdownIconTemplate;\n  _firstPageLinkIconTemplate;\n  _previousPageLinkIconTemplate;\n  _lastPageLinkIconTemplate;\n  _nextPageLinkIconTemplate;\n  pageLinks;\n  pageItems;\n  rowsPerPageItems;\n  paginatorState;\n  _first = 0;\n  _page = 0;\n  _componentStyle = inject(PaginatorStyle);\n  constructor() {\n    super();\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.updatePaginatorState();\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'dropdownicon':\n          this._dropdownIconTemplate = item.template;\n          break;\n        case 'firstpagelinkicon':\n          this._firstPageLinkIconTemplate = item.template;\n          break;\n        case 'previouspagelinkicon':\n          this._previousPageLinkIconTemplate = item.template;\n          break;\n        case 'lastpagelinkicon':\n          this._lastPageLinkIconTemplate = item.template;\n          break;\n        case 'nextpagelinkicon':\n          this._nextPageLinkIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  getAriaLabel(labelType) {\n    return this.config.translation.aria ? this.config.translation.aria[labelType] : undefined;\n  }\n  getPageAriaLabel(value) {\n    return this.config.translation.aria ? this.config.translation.aria.pageLabel.replace(/{page}/g, `${value}`) : undefined;\n  }\n  getLocalization(digit) {\n    const numerals = [...new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    }).format(9876543210)].reverse();\n    const index = new Map(numerals.map((d, i) => [i, d]));\n    if (digit > 9) {\n      const numbers = String(digit).split('');\n      return numbers.map(number => index.get(Number(number))).join('');\n    } else {\n      return index.get(digit);\n    }\n  }\n  ngOnChanges(simpleChange) {\n    super.ngOnChanges(simpleChange);\n    if (simpleChange.totalRecords) {\n      this.updatePageLinks();\n      this.updatePaginatorState();\n      this.updateFirst();\n      this.updateRowsPerPageOptions();\n    }\n    if (simpleChange.first) {\n      this._first = simpleChange.first.currentValue;\n      this.updatePageLinks();\n      this.updatePaginatorState();\n    }\n    if (simpleChange.rows) {\n      this.updatePageLinks();\n      this.updatePaginatorState();\n    }\n    if (simpleChange.rowsPerPageOptions) {\n      this.updateRowsPerPageOptions();\n    }\n    if (simpleChange.pageLinkSize) {\n      this.updatePageLinks();\n    }\n  }\n  updateRowsPerPageOptions() {\n    if (this.rowsPerPageOptions) {\n      this.rowsPerPageItems = [];\n      for (let opt of this.rowsPerPageOptions) {\n        if (typeof opt == 'object' && opt['showAll']) {\n          this.rowsPerPageItems.unshift({\n            label: opt['showAll'],\n            value: this.totalRecords\n          });\n        } else {\n          this.rowsPerPageItems.push({\n            label: String(this.getLocalization(opt)),\n            value: opt\n          });\n        }\n      }\n    }\n  }\n  isFirstPage() {\n    return this.getPage() === 0;\n  }\n  isLastPage() {\n    return this.getPage() === this.getPageCount() - 1;\n  }\n  getPageCount() {\n    return Math.ceil(this.totalRecords / this.rows);\n  }\n  calculatePageLinkBoundaries() {\n    let numberOfPages = this.getPageCount(),\n      visiblePages = Math.min(this.pageLinkSize, numberOfPages);\n    //calculate range, keep current in middle if necessary\n    let start = Math.max(0, Math.ceil(this.getPage() - visiblePages / 2)),\n      end = Math.min(numberOfPages - 1, start + visiblePages - 1);\n    //check when approaching to last page\n    var delta = this.pageLinkSize - (end - start + 1);\n    start = Math.max(0, start - delta);\n    return [start, end];\n  }\n  updatePageLinks() {\n    this.pageLinks = [];\n    let boundaries = this.calculatePageLinkBoundaries(),\n      start = boundaries[0],\n      end = boundaries[1];\n    for (let i = start; i <= end; i++) {\n      this.pageLinks.push(i + 1);\n    }\n    if (this.showJumpToPageDropdown) {\n      this.pageItems = [];\n      for (let i = 0; i < this.getPageCount(); i++) {\n        this.pageItems.push({\n          label: String(i + 1),\n          value: i\n        });\n      }\n    }\n  }\n  changePage(p) {\n    var pc = this.getPageCount();\n    if (p >= 0 && p < pc) {\n      this._first = this.rows * p;\n      var state = {\n        page: p,\n        first: this.first,\n        rows: this.rows,\n        pageCount: pc\n      };\n      this.updatePageLinks();\n      this.onPageChange.emit(state);\n      this.updatePaginatorState();\n    }\n  }\n  updateFirst() {\n    const page = this.getPage();\n    if (page > 0 && this.totalRecords && this.first >= this.totalRecords) {\n      Promise.resolve(null).then(() => this.changePage(page - 1));\n    }\n  }\n  getPage() {\n    return Math.floor(this.first / this.rows);\n  }\n  changePageToFirst(event) {\n    if (!this.isFirstPage()) {\n      this.changePage(0);\n    }\n    event.preventDefault();\n  }\n  changePageToPrev(event) {\n    this.changePage(this.getPage() - 1);\n    event.preventDefault();\n  }\n  changePageToNext(event) {\n    this.changePage(this.getPage() + 1);\n    event.preventDefault();\n  }\n  changePageToLast(event) {\n    if (!this.isLastPage()) {\n      this.changePage(this.getPageCount() - 1);\n    }\n    event.preventDefault();\n  }\n  onPageLinkClick(event, page) {\n    this.changePage(page);\n    event.preventDefault();\n  }\n  onRppChange(event) {\n    this.changePage(this.getPage());\n  }\n  onPageDropdownChange(event) {\n    this.changePage(event.value);\n  }\n  updatePaginatorState() {\n    this.paginatorState = {\n      page: this.getPage(),\n      pageCount: this.getPageCount(),\n      rows: this.rows,\n      first: this.first,\n      totalRecords: this.totalRecords\n    };\n  }\n  empty() {\n    return this.getPageCount() === 0;\n  }\n  currentPage() {\n    return this.getPageCount() > 0 ? this.getPage() + 1 : 0;\n  }\n  get currentPageReport() {\n    return this.currentPageReportTemplate.replace('{currentPage}', String(this.currentPage())).replace('{totalPages}', String(this.getPageCount())).replace('{first}', String(this.totalRecords > 0 ? this._first + 1 : 0)).replace('{last}', String(Math.min(this._first + this.rows, this.totalRecords))).replace('{rows}', String(this.rows)).replace('{totalRecords}', String(this.totalRecords));\n  }\n  static ɵfac = function Paginator_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Paginator)();\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Paginator,\n    selectors: [[\"p-paginator\"]],\n    contentQueries: function Paginator_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c2, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c3, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c4, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.firstPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previousPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lastPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nextPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    inputs: {\n      pageLinkSize: [2, \"pageLinkSize\", \"pageLinkSize\", numberAttribute],\n      style: \"style\",\n      styleClass: \"styleClass\",\n      alwaysShow: [2, \"alwaysShow\", \"alwaysShow\", booleanAttribute],\n      dropdownAppendTo: \"dropdownAppendTo\",\n      templateLeft: \"templateLeft\",\n      templateRight: \"templateRight\",\n      appendTo: \"appendTo\",\n      dropdownScrollHeight: \"dropdownScrollHeight\",\n      currentPageReportTemplate: \"currentPageReportTemplate\",\n      showCurrentPageReport: [2, \"showCurrentPageReport\", \"showCurrentPageReport\", booleanAttribute],\n      showFirstLastIcon: [2, \"showFirstLastIcon\", \"showFirstLastIcon\", booleanAttribute],\n      totalRecords: [2, \"totalRecords\", \"totalRecords\", numberAttribute],\n      rows: [2, \"rows\", \"rows\", numberAttribute],\n      rowsPerPageOptions: \"rowsPerPageOptions\",\n      showJumpToPageDropdown: [2, \"showJumpToPageDropdown\", \"showJumpToPageDropdown\", booleanAttribute],\n      showJumpToPageInput: [2, \"showJumpToPageInput\", \"showJumpToPageInput\", booleanAttribute],\n      jumpToPageItemTemplate: \"jumpToPageItemTemplate\",\n      showPageLinks: [2, \"showPageLinks\", \"showPageLinks\", booleanAttribute],\n      locale: \"locale\",\n      dropdownItemTemplate: \"dropdownItemTemplate\",\n      first: \"first\"\n    },\n    outputs: {\n      onPageChange: \"onPageChange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([PaginatorStyle]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"class\", \"ngStyle\", \"ngClass\", 4, \"ngIf\"], [3, \"ngStyle\", \"ngClass\"], [\"class\", \"p-paginator-content-start\", 4, \"ngIf\"], [\"class\", \"p-paginator-current\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", \"class\", \"p-paginator-first\", 3, \"disabled\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-prev\", 3, \"click\", \"disabled\", \"ngClass\"], [3, \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-paginator-prev-icon\", 4, \"ngIf\"], [\"class\", \"p-paginator-pages\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-jtp-dropdown\", 3, \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\", \"onChange\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-next\", 3, \"click\", \"disabled\", \"ngClass\"], [\"class\", \"p-paginator-next-icon\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", \"class\", \"p-paginator-last\", 3, \"disabled\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-paginator-jtp-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-rpp-dropdown\", 3, \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\", \"ariaLabel\", \"ngModelChange\", \"onChange\", 4, \"ngIf\"], [\"class\", \"p-paginator-content-end\", 4, \"ngIf\"], [1, \"p-paginator-content-start\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-paginator-current\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-first\", 3, \"click\", \"disabled\", \"ngClass\"], [\"class\", \"p-paginator-first-icon\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-paginator-first-icon\"], [4, \"ngTemplateOutlet\"], [1, \"p-paginator-prev-icon\"], [1, \"p-paginator-pages\"], [\"type\", \"button\", \"class\", \"p-paginator-page\", \"pRipple\", \"\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-page\", 3, \"click\", \"ngClass\"], [\"styleClass\", \"p-paginator-jtp-dropdown\", 3, \"onChange\", \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\"], [\"pTemplate\", \"selectedItem\"], [4, \"ngIf\"], [\"pTemplate\", \"item\"], [\"pTemplate\", \"dropdownicon\"], [1, \"p-paginator-next-icon\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-last\", 3, \"click\", \"disabled\", \"ngClass\"], [\"class\", \"p-paginator-last-icon\", 4, \"ngIf\"], [1, \"p-paginator-last-icon\"], [1, \"p-paginator-jtp-input\", 3, \"ngModelChange\", \"ngModel\", \"disabled\"], [\"styleClass\", \"p-paginator-rpp-dropdown\", 3, \"ngModelChange\", \"onChange\", \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\", \"ariaLabel\"], [1, \"p-paginator-content-end\"]],\n    template: function Paginator_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, Paginator_div_0_Template, 16, 29, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.alwaysShow ? true : ctx.pageLinks && ctx.pageLinks.length > 1);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, Select, InputNumber, FormsModule, i2.NgControlStatus, i2.NgModel, Ripple, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleLeftIcon, AngleRightIcon, SharedModule, i3.PrimeTemplate],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Paginator, [{\n    type: Component,\n    args: [{\n      selector: 'p-paginator',\n      standalone: true,\n      imports: [CommonModule, Select, InputNumber, FormsModule, Ripple, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleLeftIcon, AngleRightIcon, SharedModule],\n      template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'p-paginator p-component'\" *ngIf=\"alwaysShow ? true : pageLinks && pageLinks.length > 1\" [attr.data-pc-section]=\"'paginator'\" [attr.data-pc-section]=\"'root'\">\n            <div class=\"p-paginator-content-start\" *ngIf=\"templateLeft\" [attr.data-pc-section]=\"'start'\">\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: { $implicit: paginatorState }\"></ng-container>\n            </div>\n            <span class=\"p-paginator-current\" *ngIf=\"showCurrentPageReport\">{{ currentPageReport }}</span>\n            <button\n                *ngIf=\"showFirstLastIcon\"\n                type=\"button\"\n                [disabled]=\"isFirstPage() || empty()\"\n                (click)=\"changePageToFirst($event)\"\n                pRipple\n                class=\"p-paginator-first\"\n                [ngClass]=\"{ 'p-disabled': isFirstPage() || empty() }\"\n                [attr.aria-label]=\"getAriaLabel('firstPageLabel')\"\n            >\n                <AngleDoubleLeftIcon *ngIf=\"!firstPageLinkIconTemplate && !_firstPageLinkIconTemplate\" [styleClass]=\"'p-paginator-first-icon'\" />\n                <span class=\"p-paginator-first-icon\" *ngIf=\"firstPageLinkIconTemplate || _firstPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"firstPageLinkIconTemplate || _firstPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <button type=\"button\" [disabled]=\"isFirstPage() || empty()\" (click)=\"changePageToPrev($event)\" pRipple class=\"p-paginator-prev\" [ngClass]=\"{ 'p-disabled': isFirstPage() || empty() }\" [attr.aria-label]=\"getAriaLabel('prevPageLabel')\">\n                <AngleLeftIcon *ngIf=\"!previousPageLinkIconTemplate && !_previousPageLinkIconTemplate\" [styleClass]=\"'p-paginator-prev-icon'\" />\n                <span class=\"p-paginator-prev-icon\" *ngIf=\"previousPageLinkIconTemplate || _previousPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"previousPageLinkIconTemplate || _previousPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <span class=\"p-paginator-pages\" *ngIf=\"showPageLinks\">\n                <button\n                    type=\"button\"\n                    *ngFor=\"let pageLink of pageLinks\"\n                    class=\"p-paginator-page\"\n                    [ngClass]=\"{ 'p-paginator-page-selected': pageLink - 1 == getPage() }\"\n                    [attr.aria-label]=\"getPageAriaLabel(pageLink)\"\n                    [attr.aria-current]=\"pageLink - 1 == getPage() ? 'page' : undefined\"\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\"\n                    pRipple\n                >\n                    {{ getLocalization(pageLink) }}\n                </button>\n            </span>\n            <p-select\n                [options]=\"pageItems\"\n                [ngModel]=\"getPage()\"\n                *ngIf=\"showJumpToPageDropdown\"\n                [disabled]=\"empty()\"\n                [attr.aria-label]=\"getAriaLabel('jumpToPageDropdownLabel')\"\n                styleClass=\"p-paginator-jtp-dropdown\"\n                (onChange)=\"onPageDropdownChange($event)\"\n                [appendTo]=\"dropdownAppendTo\"\n                [scrollHeight]=\"dropdownScrollHeight\"\n            >\n                <ng-template pTemplate=\"selectedItem\">{{ currentPageReport }}</ng-template>\n                <ng-container *ngIf=\"jumpToPageItemTemplate\">\n                    <ng-template let-item pTemplate=\"item\">\n                        <ng-container *ngTemplateOutlet=\"jumpToPageItemTemplate; context: { $implicit: item }\"></ng-container>\n                    </ng-template>\n                </ng-container>\n                <ng-template pTemplate=\"dropdownicon\" *ngIf=\"dropdownIconTemplate || _dropdownIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"dropdownIconTemplate || _dropdownIconTemplate\"></ng-container>\n                </ng-template>\n            </p-select>\n            <button type=\"button\" [disabled]=\"isLastPage() || empty()\" (click)=\"changePageToNext($event)\" pRipple class=\"p-paginator-next\" [ngClass]=\"{ 'p-disabled': isLastPage() || empty() }\" [attr.aria-label]=\"getAriaLabel('nextPageLabel')\">\n                <AngleRightIcon *ngIf=\"!nextPageLinkIconTemplate && !_nextPageLinkIconTemplate\" [styleClass]=\"'p-paginator-next-icon'\" />\n                <span class=\"p-paginator-next-icon\" *ngIf=\"nextPageLinkIconTemplate || _nextPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"nextPageLinkIconTemplate || _nextPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <button\n                *ngIf=\"showFirstLastIcon\"\n                type=\"button\"\n                [disabled]=\"isLastPage() || empty()\"\n                (click)=\"changePageToLast($event)\"\n                pRipple\n                class=\"p-paginator-last\"\n                [ngClass]=\"{ 'p-disabled': isLastPage() || empty() }\"\n                [attr.aria-label]=\"getAriaLabel('lastPageLabel')\"\n            >\n                <AngleDoubleRightIcon *ngIf=\"!lastPageLinkIconTemplate && !_lastPageLinkIconTemplate\" [styleClass]=\"'p-paginator-last-icon'\" />\n                <span class=\"p-paginator-last-icon\" *ngIf=\"lastPageLinkIconTemplate || _lastPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"lastPageLinkIconTemplate || _lastPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <p-inputnumber *ngIf=\"showJumpToPageInput\" [ngModel]=\"currentPage()\" class=\"p-paginator-jtp-input\" [disabled]=\"empty()\" (ngModelChange)=\"changePage($event - 1)\"></p-inputnumber>\n            <p-select\n                [options]=\"rowsPerPageItems\"\n                [(ngModel)]=\"rows\"\n                *ngIf=\"rowsPerPageOptions\"\n                styleClass=\"p-paginator-rpp-dropdown\"\n                [disabled]=\"empty()\"\n                (onChange)=\"onRppChange($event)\"\n                [appendTo]=\"dropdownAppendTo\"\n                [scrollHeight]=\"dropdownScrollHeight\"\n                [ariaLabel]=\"getAriaLabel('rowsPerPageLabel')\"\n            >\n                <ng-container *ngIf=\"dropdownItemTemplate\">\n                    <ng-template let-item pTemplate=\"item\">\n                        <ng-container *ngTemplateOutlet=\"dropdownItemTemplate; context: { $implicit: item }\"></ng-container>\n                    </ng-template>\n                </ng-container>\n                <ng-template pTemplate=\"dropdownicon\" *ngIf=\"dropdownIconTemplate || _dropdownIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"dropdownIconTemplate || _dropdownIconTemplate\"></ng-container>\n                </ng-template>\n            </p-select>\n            <div class=\"p-paginator-content-end\" *ngIf=\"templateRight\" [attr.data-pc-section]=\"'end'\">\n                <ng-container *ngTemplateOutlet=\"templateRight; context: { $implicit: paginatorState }\"></ng-container>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [PaginatorStyle]\n    }]\n  }], () => [], {\n    pageLinkSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    alwaysShow: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    dropdownAppendTo: [{\n      type: Input\n    }],\n    templateLeft: [{\n      type: Input\n    }],\n    templateRight: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    dropdownScrollHeight: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showFirstLastIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    totalRecords: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    rows: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showJumpToPageInput: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    jumpToPageItemTemplate: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    locale: [{\n      type: Input\n    }],\n    dropdownItemTemplate: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    onPageChange: [{\n      type: Output\n    }],\n    dropdownIconTemplate: [{\n      type: ContentChild,\n      args: ['dropdownicon', {\n        descendants: false\n      }]\n    }],\n    firstPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['firstpagelinkicon', {\n        descendants: false\n      }]\n    }],\n    previousPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['previouspagelinkicon', {\n        descendants: false\n      }]\n    }],\n    lastPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['lastpagelinkicon', {\n        descendants: false\n      }]\n    }],\n    nextPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['nextpagelinkicon', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(Paginator, {\n    className: \"Paginator\"\n  });\n})();\nclass PaginatorModule {\n  static ɵfac = function PaginatorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PaginatorModule)();\n  };\n  static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: PaginatorModule\n  });\n  static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [Paginator, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Paginator, SharedModule],\n      exports: [Paginator, SharedModule]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PaginatorModule, {\n    imports: [Paginator, SharedModule],\n    exports: [Paginator, SharedModule]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Paginator, PaginatorClasses, PaginatorModule, PaginatorStyle };\n//# sourceMappingURL=primeng-paginator.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}