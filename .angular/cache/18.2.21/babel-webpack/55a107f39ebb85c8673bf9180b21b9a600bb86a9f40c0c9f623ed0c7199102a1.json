{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/chart\";\nexport class ChartViewComponent {\n  // Barras apiladas: meses vs estados\n  stackedData = {};\n  stackedOptions; // non-null assertion\n  // Línea: días vs un indicador distinto (p.ej. alertas diarias)\n  lineData = {};\n  lineOptions; // non-null assertion\n  ngOnInit() {\n    const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun'];\n    // Datos diferentes por estado (barras apiladas)\n    const pendientes = [12, 9, 14, 8, 11, 7];\n    const aprobados = [7, 10, 6, 12, 9, 13];\n    const enRevision = [4, 5, 3, 6, 5, 4];\n    this.stackedData = {\n      labels: months,\n      datasets: [{\n        label: 'Pendiente',\n        data: pendientes,\n        backgroundColor: 'rgba(244,67,54,0.7)'\n      }, {\n        label: 'Aprobado',\n        data: aprobados,\n        backgroundColor: 'rgba(76,175,80,0.7)'\n      }, {\n        label: 'En revisión',\n        data: enRevision,\n        backgroundColor: 'rgba(33,150,243,0.7)'\n      }]\n    };\n    this.stackedOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        tooltip: {\n          enabled: true,\n          callbacks: {\n            label: ctx => {\n              const estado = ctx.dataset.label || 'Estado';\n              const valor = ctx.parsed?.y ?? ctx.parsed;\n              return `${estado}: ${valor}`;\n            },\n            title: items => items?.[0]?.label ?? ''\n          }\n        }\n      },\n      scales: {\n        x: {\n          stacked: true,\n          grid: {\n            display: false\n          }\n        },\n        y: {\n          stacked: true,\n          beginAtZero: true\n        }\n      }\n    };\n    // Línea con otra métrica (distinta a la de barras)\n    const days = ['Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb', 'Dom'];\n    const tendencia = [5, 8, 6, 9, 12, 10, 7];\n    this.lineData = {\n      labels: days,\n      datasets: [{\n        label: 'Alertas diarias',\n        data: tendencia,\n        fill: false,\n        borderWidth: 2,\n        tension: 0.3,\n        pointRadius: 3\n      }]\n    };\n    this.lineOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        tooltip: {\n          enabled: true,\n          callbacks: {\n            label: ctx => {\n              const valor = ctx.parsed?.y ?? ctx.parsed;\n              return `Valor: ${valor}`;\n            },\n            title: items => items?.[0]?.label ?? ''\n          }\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            display: false\n          }\n        },\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n  }\n  static ɵfac = function ChartViewComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ChartViewComponent)();\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartViewComponent,\n    selectors: [[\"app-chart-view\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[1, \"chart-wrapper\"], [1, \"chart-card\"], [\"type\", \"bar\", 2, \"height\", \"360px\", \"display\", \"block\", 3, \"data\", \"options\"], [\"type\", \"line\", 2, \"height\", \"360px\", \"display\", \"block\", 3, \"data\", \"options\"]],\n    template: function ChartViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"h3\");\n        i0.ɵɵtext(3, \"Estados por Mes (Barras apiladas)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"p-chart\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"section\", 1)(6, \"h3\");\n        i0.ɵɵtext(7, \"Tendencia diaria (L\\u00EDnea)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"p-chart\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"data\", ctx.stackedData)(\"options\", ctx.stackedOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"data\", ctx.lineData)(\"options\", ctx.lineOptions);\n      }\n    },\n    dependencies: [i1.UIChart],\n    styles: [\".chart-wrapper[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;gap:1.5rem;padding:1rem}@media (min-width: 900px){.chart-wrapper[_ngcontent-%COMP%]{grid-template-columns:1fr 1fr}}.chart-card[_ngcontent-%COMP%]{background:#fff;border-radius:16px;padding:1rem 1.25rem;box-shadow:0 8px 24px #0000000f}.chart-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:.25rem 0 1rem;font-weight:600;color:#1a237e}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}