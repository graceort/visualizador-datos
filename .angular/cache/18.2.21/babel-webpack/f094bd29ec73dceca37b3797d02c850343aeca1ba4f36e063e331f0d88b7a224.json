{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\n// src/object/methods/isFunction.ts\nfunction isFunction(value) {\n  return !!(value && value.constructor && value.call && value.apply);\n}\n\n// src/mergeprops/index.ts\nfunction mergeProps(...props) {\n  return props == null ? void 0 : props.reduce((merged, ps = {}) => {\n    for (const key in ps) {\n      const value = ps[key];\n      if (key === \"style\") {\n        merged[\"style\"] = __spreadValues(__spreadValues({}, merged[\"style\"]), ps[\"style\"]);\n      } else if (key === \"class\") {\n        merged[\"class\"] = [merged[\"class\"], ps[\"class\"]].join(\" \").trim() || void 0;\n      } else if (key === \"className\") {\n        merged[\"className\"] = [merged[\"className\"], ps[\"className\"]].join(\" \").trim() || void 0;\n      } else if (isFunction(value)) {\n        const fn = merged[key];\n        merged[key] = fn ? (...args) => {\n          fn(...args);\n          value(...args);\n        } : value;\n      } else {\n        merged[key] = value;\n      }\n    }\n    return merged;\n  }, {});\n}\nexport { mergeProps };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}