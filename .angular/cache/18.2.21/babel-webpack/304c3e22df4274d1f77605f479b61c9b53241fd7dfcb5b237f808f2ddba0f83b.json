{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/covid-api.service\";\nimport * as i2 from \"primeng/chart\";\nexport class ChartViewComponent {\n  api;\n  countries = ['Ecuador', 'Peru', 'Colombia', 'Chile'];\n  selected = 'Ecuador';\n  covidLineData;\n  covidLineOptions;\n  pieData;\n  pieOptions;\n  donutData;\n  donutOptions;\n  loading = true;\n  constructor(api) {\n    this.api = api;\n  }\n  ngOnInit() {\n    this.fetch();\n  }\n  onCountryChange() {\n    this.fetch();\n  }\n  fetch() {\n    const country = this.selected;\n    this.loading = true;\n    forkJoin({\n      hist: this.api.getHistorical(country, 180),\n      sum: this.api.getCountry(country)\n    }).subscribe(({\n      hist,\n      sum\n    }) => {\n      // Línea: casos vs muertes\n      this.covidLineData = {\n        labels: hist.dates,\n        datasets: [{\n          label: 'Casos',\n          data: hist.cases,\n          fill: false,\n          tension: 0.25\n        }, {\n          label: 'Muertes',\n          data: hist.deaths,\n          fill: false,\n          tension: 0.25,\n          borderDash: [6, 6]\n        }]\n      };\n      this.covidLineOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'bottom'\n          },\n          tooltip: {\n            intersect: false,\n            mode: 'index'\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      };\n      // Pastel: casos vs recuperados vs fallecidos\n      this.pieData = {\n        labels: ['Casos', 'Recuperados', 'Fallecidos'],\n        datasets: [{\n          data: [sum?.cases ?? 0, sum?.recovered ?? 0, sum?.deaths ?? 0]\n        }]\n      };\n      this.pieOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'bottom'\n          },\n          tooltip: {\n            callbacks: {\n              label: ctx => {\n                const label = ctx.label ?? '';\n                const value = ctx.parsed ?? 0;\n                const total = ctx.dataset.data.reduce((a, b) => a + b, 0);\n                const pct = total ? (value / total * 100).toFixed(1) : '0.0';\n                return `${label}: ${value.toLocaleString()} (${pct}%)`;\n              }\n            }\n          }\n        }\n      };\n      // Dona: activos vs recuperados vs fallecidos\n      const active = sum?.active ?? Math.max((sum?.cases ?? 0) - (sum?.recovered ?? 0) - (sum?.deaths ?? 0), 0);\n      this.donutData = {\n        labels: ['Activos', 'Recuperados', 'Fallecidos'],\n        datasets: [{\n          data: [active, sum?.recovered ?? 0, sum?.deaths ?? 0]\n        }]\n      };\n      this.donutOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '60%',\n        plugins: {\n          legend: {\n            position: 'bottom'\n          }\n        }\n      };\n      this.loading = false;\n    }, _ => {\n      this.loading = false;\n    });\n  }\n  static ɵfac = function ChartViewComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ChartViewComponent)(i0.ɵɵdirectiveInject(i1.CovidApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartViewComponent,\n    selectors: [[\"app-chart-view\"]],\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"chart-view\"], [1, \"cards\"], [1, \"card\"], [\"type\", \"line\", 2, \"height\", \"320px\", \"display\", \"block\", 3, \"data\", \"options\"], [1, \"hint\"], [\"type\", \"pie\", 2, \"height\", \"320px\", \"display\", \"block\", 3, \"data\", \"options\"], [\"type\", \"doughnut\", 2, \"height\", \"320px\", \"display\", \"block\", 3, \"data\", \"options\"]],\n    template: function ChartViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Visor de Gr\\u00E1ficos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"h3\");\n        i0.ɵɵtext(6, \"COVID-19 mensual (l\\u00EDnea)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"p-chart\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"h3\");\n        i0.ɵɵtext(10, \"COVID-19 (distribuci\\u00F3n acumulada)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\", 4);\n        i0.ɵɵtext(12, \"Confirmados vs Recuperados vs Fallecidos.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"p-chart\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 2)(15, \"h3\");\n        i0.ɵɵtext(16, \"Vacunaci\\u00F3n (dona)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 4);\n        i0.ɵɵtext(18, \"Porcentaje de poblaci\\u00F3n: \\u22651 dosis, esquema completo y refuerzo.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"p-chart\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"data\", ctx.covidLineData)(\"options\", ctx.covidLineOptions);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"data\", ctx.pieData)(\"options\", ctx.pieOptions);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"data\", ctx.donutData)(\"options\", ctx.donutOptions);\n      }\n    },\n    dependencies: [i2.UIChart],\n    styles: [\".chart-view[_ngcontent-%COMP%]{padding:1rem}.cards[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(320px,1fr));gap:1rem}.card[_ngcontent-%COMP%]{border:1px solid #e5e7eb;border-radius:12px;padding:1rem;background:#fff}.card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:.5rem}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}